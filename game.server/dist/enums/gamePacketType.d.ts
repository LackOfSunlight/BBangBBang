export declare enum GamePacketType {
    registerRequest = "registerRequest",
    registerResponse = "registerResponse",
    loginRequest = "loginRequest",
    loginResponse = "loginResponse",
    createRoomRequest = "createRoomRequest",
    createRoomResponse = "createRoomResponse",
    getRoomListRequest = "getRoomListRequest",
    getRoomListResponse = "getRoomListResponse",
    joinRoomRequest = "joinRoomRequest",
    joinRoomResponse = "joinRoomResponse",
    joinRandomRoomRequest = "joinRandomRoomRequest",
    joinRandomRoomResponse = "joinRandomRoomResponse",
    joinRoomNotification = "joinRoomNotification",
    leaveRoomRequest = "leaveRoomRequest",
    leaveRoomResponse = "leaveRoomResponse",
    leaveRoomNotification = "leaveRoomNotification",
    gamePrepareRequest = "gamePrepareRequest",
    gamePrepareResponse = "gamePrepareResponse",
    gamePrepareNotification = "gamePrepareNotification",
    gameStartRequest = "gameStartRequest",
    gameStartResponse = "gameStartResponse",
    gameStartNotification = "gameStartNotification",
    positionUpdateRequest = "positionUpdateRequest",
    positionUpdateNotification = "positionUpdateNotification",
    useCardRequest = "useCardRequest",
    useCardResponse = "useCardResponse",
    useCardNotification = "useCardNotification",
    equipCardNotification = "equipCardNotification",
    cardEffectNotification = "cardEffectNotification",
    fleaMarketNotification = "fleaMarketNotification",
    fleaMarketPickRequest = "fleaMarketPickRequest",
    fleaMarketPickResponse = "fleaMarketPickResponse",
    userUpdateNotification = "userUpdateNotification",
    phaseUpdateNotification = "phaseUpdateNotification",
    reactionRequest = "reactionRequest",
    reactionResponse = "reactionResponse",
    destroyCardRequest = "destroyCardRequest",
    destroyCardResponse = "destroyCardResponse",
    gameEndNotification = "gameEndNotification",
    cardSelectRequest = "cardSelectRequest",
    cardSelectResponse = "cardSelectResponse",
    passDebuffRequest = "passDebuffRequest",
    passDebuffResponse = "passDebuffResponse",
    warningNotification = "warningNotification",
    animationNotification = "animationNotification"
}
export declare const gamePackType: {
    readonly registerRequest: "registerRequest";
    readonly registerResponse: "registerResponse";
    readonly loginRequest: "loginRequest";
    readonly loginResponse: "loginResponse";
    readonly createRoomRequest: "createRoomRequest";
    readonly createRoomResponse: "createRoomResponse";
    readonly getRoomListRequest: "getRoomListRequest";
    readonly getRoomListResponse: "getRoomListResponse";
    readonly joinRoomRequest: "joinRoomRequest";
    readonly joinRoomResponse: "joinRoomResponse";
    readonly joinRandomRoomRequest: "joinRandomRoomRequest";
    readonly joinRandomRoomResponse: "joinRandomRoomResponse";
    readonly joinRoomNotification: "joinRoomNotification";
    readonly leaveRoomRequest: "leaveRoomRequest";
    readonly leaveRoomResponse: "leaveRoomResponse";
    readonly leaveRoomNotification: "leaveRoomNotification";
    readonly gamePrepareRequest: "gamePrepareRequest";
    readonly gamePrepareResponse: "gamePrepareResponse";
    readonly gamePrepareNotification: "gamePrepareNotification";
    readonly gameStartRequest: "gameStartRequest";
    readonly gameStartResponse: "gameStartResponse";
    readonly gameStartNotification: "gameStartNotification";
    readonly positionUpdateRequest: "positionUpdateRequest";
    readonly positionUpdateNotification: "positionUpdateNotification";
    readonly useCardRequest: "useCardRequest";
    readonly useCardResponse: "useCardResponse";
    readonly useCardNotification: "useCardNotification";
    readonly equipCardNotification: "equipCardNotification";
    readonly cardEffectNotification: "cardEffectNotification";
    readonly fleaMarketNotification: "fleaMarketNotification";
    readonly fleaMarketPickRequest: "fleaMarketPickRequest";
    readonly fleaMarketPickResponse: "fleaMarketPickResponse";
    readonly userUpdateNotification: "userUpdateNotification";
    readonly phaseUpdateNotification: "phaseUpdateNotification";
    readonly reactionRequest: "reactionRequest";
    readonly reactionResponse: "reactionResponse";
    readonly destroyCardRequest: "destroyCardRequest";
    readonly destroyCardResponse: "destroyCardResponse";
    readonly gameEndNotification: "gameEndNotification";
    readonly cardSelectRequest: "cardSelectRequest";
    readonly cardSelectResponse: "cardSelectResponse";
    readonly passDebuffRequest: "passDebuffRequest";
    readonly passDebuffResponse: "passDebuffResponse";
    readonly warningNotification: "warningNotification";
    readonly animationNotification: "animationNotification";
};
export type gamePackType = typeof GamePacketType[keyof typeof GamePacketType];
//# sourceMappingURL=gamePacketType.d.ts.map